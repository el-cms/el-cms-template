##
## File to use with superBake 0.3
##
## @copyright     Copyright 2012, Manuel Tancoigne (http://experimentslabs.com)
## @author        Manuel Tancoigne <m.tancoigne@gmail.com>
## @link          http://experimentslabs.com Experiments Labs
## @package       ELCMS.superBake.Configuration
## @license       GPL v3 (http://www.gnu.org/licenses/gpl.html)
## @version       0.3
##
##-----------------------------------------------------------------------
##
## Configuration file for ExperimentsLabs
## -------------------------
##      All the app.
##
##
##-----------------------------------------------------------------------

---
#--------------------------------------------------------------------------
#
# File description
#
#--------------------------------------------------------------------------
description: Full configuration file for ExperimentsLabs

#--------------------------------------------------------------------------
#
# General information
#
#--------------------------------------------------------------------------
general:
  ## Name of the "plugin that isn't one". This is a very special plugin:
  ## Everything in it will be created in the app/ dir, not in a plugin.
  ## Change this value if you want to name one of your plugin "appBase"
  appBase: AppBase
  ## Use routing prefixes
  usePrefixes: true
  ## Prefix that have all rights:
  ## leave empty if you don't use one.
  adminPrefix: admin
  ## By default, update the bootstrap file on plugin generation ?
  updateBootstrap: true
  ## Default DB connection to use (see your `app/Config/database.php` file)
  dbConnection: default

  ##
  ## Personnal informations, mostly here to use in generated headers.
  ##

  ## Your name (for file headers)
  editorName: Manuel Tancoigne
  ## Your email adress (for file headers)
  editorEmail: m.tancoigne@gmail.com
  ## Your website
  editorWebsite: http://experimentslabs.com
  ## Your website name
  editorWebsiteName: ELabs
  ## Your license template (find out all licenses in template/commons/licenses/)
  ## This license will be added in generated files
  editorLicenseTemplate: gpl3
  ## Package name
  basePackage: ELABS

  ## Current site name
  siteName: Experiments Labs
  ## Current site editor
  siteEditor: Manuel Tancoigne
  ## site editor Email
  siteEditorEmail: admin@experimentslabs.com


  ##
  ## Options related to dependencies and required files
  ##

  ## Set this to true to copy all the required files relatively to /app
  ## Else, they will be copied in their repsective plugins.
  ## THIS IS NOT YET IMPLEMENTED AND WILL CERTAINLY MOVE
  #copyRequiredToAppBase: false

  ##
  ## Other options for superBake
  ##

  ## Language support: if set to true, app and plugin string will use the
  ## internationalization methods for strings (`__()`, `__d()`). Set it to false,
  ## and strings will be plain text.
  useInternationalizedStrings: true

  ## If set to false, session-related methods will not be included in generated files.
  ## This option is not in the `theme` section, as methods like `setFlash()` use
  ## its value.
  useSessions: true


#--------------------------------------------------------------------------
#
# Global options for the theme
# Here you can set things related to your template.
#
#--------------------------------------------------------------------------

theme:
  ## Helpers that must be enabled
  helpers:
    Form
    Html

  ## Components to enable.
  ## If you want to disable a component but still keep its config, add a "useComponent: false"
  ## option.
  components:
    debugKit:
      # Default is true.
      useComponent: false
    Auth:
      ## Roles model (usually Group or Role)
      roleModel: Group
      ## Role primary key
      roleModelPK: id

      ## Users model (usually User)
      ## Note that the register action must be in the controller corresponding to
      ## the model.
      userModel: User
      ## Users primary key
      userModelPK: id

      ## Defines if the user can choose his role during registration or on account edit.
      userCanChooseRole: false
      ## Default role Id (usually the id corresponding to an "user" role)
      defaultRoleId: 2

      ## Valid user status: condition for an user to log in. Keep empty if no condition
      ## is required for login
      validUserStatus: true
      ## User status field
      userStatusField: status
      ## Auto approve new users
      defaultUserStatus: 1

      ## Field used for authentication
      userNameField: email
      ## Password field (usually "password")
      userPassField: password

      ## Action where the user will be redirected to after login. The action should
      ## be in controller related to the userModel.
      ## prefix::action or action only.
      loginRedirect: user::dashboard
      ## Action handling login
      loginAction: login
    Session:
    Acl:

  ## Default template have custom flash message elements. If you set this value to true,
  ## flash messages will need them.
  ## Look at the '<defaultTemplate>/files/elements/flash_message.ctp' file.
  ## Define the different elements in a plugin's 'files' section (i.e.: 'appBase.files')
  flashMessageElement: true
  ## Default class for a form:
  formClass: form-horizontal

  ## Defines if each prefix have its own layout for rendered pages.
  ## If so, don't forget to define them in the appBase.files section.
  useLayoutsForPrefixes: true

  ## Defines if the system use a kind of Safe For Work limitations
  useSFW: true

  ## Field that describes an item as sfw:
  sfwField: sfw

  ## Fields that may contain nsfw data:
  nsfwDataFields:
    image
    file
    text
    excerpt
    description
    content
    data
    link

  ## Use anonymous data
  useAnon: true

  ## Field that describes an item as anonymous
  anonField: anon

  ## Fields that can compromise the user anonymity
  anonDataFields:
    email
    pseudo
    name
    realname
  ## foreign key linking the user to the item:
  anonFK: user_id
  ## Name of the anonymous user:
  anonName: Anonymous
  ## UserId for the anon user
  anonId: 2


  ## languages available in app:
  ## superBake default template have a support for different languages fields in DB.
  ## i.e: title_eng and title_fra. If you enable language support below, you will
  ## have to define the different languages used in your tables and in the controllers
  ## corresponding to these fields, you should define the differents language fields in options.
  language:
    ## Content can be in different languages
    useLanguages: true
    ## Default language for empty content
    fallback: fra
    ## Languages available
    available:
      fra
      eng
    descriptions:
      fra: Version française
      eng: English version
    ## Date formats for the different languages
    dateFormats:
      fra: d-m-Y \à H:i
      eng: Y-m-d \a\t h:ia

  ## Use icons ?
  useIcons: true
  ## Icon pack
  iconPack: fa

  ## Use Gravatar avatars ?
  useGravatar: true



#--------------------------------------------------------------------------
#
# Default values.
# Here are defined defaults settings. They are overriden in plugins definitions.
#
#--------------------------------------------------------------------------
defaults:

  ##
  ## This is a default view
  ##
  view:
    ## Path to the view template.
    ## (a list can be found in '<template>/views', and path must
    ## be relative to this folder.)
    template:
    ## View must be generated by default
    generate: true
    ## ... And have options
    options:
        ## Hidden fields in views
      hiddenFields:
        password
        see_nsfw
        modified
        realname
      ## Fields that don't have sorting links
      unSortableFields:
        id
      ## Hidden fields from related tables
      assoc_hiddenModelFields:
        ## Model name
        Users:
          ## Fields
          password
          see_nsfw
          modified
          realname
          sfw

  ##
  ## This is a default action
  ##
  action:
    ## This is the path to the template
    ## (a list can be found in '<template>/actions/actions', and path must
    ## be relative to this folder.)
    template:
    ## An array of options for current action
    options:
      icon: cog
    ## Defines if the action have a view
    haveView: true
    ## The 'view' section contains the view configuration and will be fill by the
    ## 'defaults.view' section
    view: []
    ## Set this to true and the action will be removed from controller.
    ## The difefrence of this and generate: false is that this action will not be
    ## referenced in any case.
    ## Use it when you want to discard a specific action that was previously defined
    ## as a default action.
    ##
    ## i.e.: I defined an 'edit' action in the 'defaults.actions' section, but my
    ## 'PermanentController' should not have one.
    ## I'll define '...Permanents.controller.actions.edit.blackListed' to true, and
    ## this controller will not have the action created nor referenced.
    blackListed: false

  ##
  ## This is the default actions list.
  ## Here you will define your prefixes and the actions that are available for them.
  ##
  actions:
    ## This is the public prefix
    ## Public controllers have only index and view actions.
    public:
      ## Index action
      index:
        options:
          icon: list
        view:
          options:
            ## Public pages have no toolbar.
            noToolbar: true
            hiddenFields:
              id
              published
              created
              modified
              password
              email
      ## View action
      view:
        options:
          icon: eye-open
        view:
          options:
            noToolbar: true
            hiddenFields:
              id
              published
              created
              modified
              password
              email
    ## User prefix
    user:
      index:
        options:
          icon: list
        view:
          options:
            noToolbar: false
      view:
        options:
          icon: eye-open
        view:
          options:
            noToolbar: false
      add:
        options:
          icon: plus
        view:
          options:
            noToolbar: false
      edit:
        options:
          icon: pencil
        view:
          options:
            noToolbar: false
      delete:
        haveView: false;
        options:
          icon: trash-o;
    ## This is the admin prefix
    admin:
      ## Index action
      index:
        options:
          icon: list
      ## View action
      view:
        options:
          icon: eye-open
      ## Add action
      add:
        options:
          icon: plus
      ## Delete action
      delete:
        ## Delete has no view
        haveView: false
        options:
          icon: trash-o
      ## Edit action
      edit:
        options:
          icon: pencil

  ##
  ## Default configuration for a controller
  ##
  controller:
    ## Controller name.
    ## It must follows Cake conventions. If empty, model name will be used as base.
    name:
    ## Name used in views
    displayName:
    ## The controller must be generated.
    generate: true
    ## Defines if the views for this controller must be generated or not.
    ## This overrides the view.generate state.
    generateViews: true
    ## List of prefixes/actions ('defaults.actions')
    actions: []
    ## Additionnal libraries
    libraries: []

  ##
  ## Default model configuration
  ##
  model:
    ## Model name.
    ## Follow the cake conventions. If empty, part name will be used as base.
    name:
    ## The model must be generated
    generate: true
    ## Display field. Can be null and the primary key will be used in views
    displayField:
    ## Snippets list. A snippet is a bit of code to be included in your model.
    ## Snippets are in '<template>/models'
    snippets: []
    ## Options passed to template for generation
    options: []

  ##
  ## Default snippet configuration
  ##
  snippet:
    ## path to the snippet.
    ## Path is relative to <yourTemplate>/models
    ## if a snippet doesn't exists, a comment will be inserted in model as a reminder.
    path:
    ## Options for this snippet.
    options: []

  ##
  ## Default part configuration
  ##
  part:
    ## Generate this part ?
    ## This overrides sublevels "generate": model.generate, controller.generate,
    ## view.generate,...
    generate: true
    ## The controller should have a model.
    haveModel: true
    ## Model configuration ('defaults.model')
    model: []
    ## The part should have a controller.
    haveController: true
    ## Controller configuration ('defaults.controller')
    controller: []
    ## Options that must be available in both model, controllers and views.
    ## Note that options defined here can be overriden in model/controllers and
    ## views.
    options:
      icon: cog

  ##
  ## Default plugin configuration
  ##
  plugin:
    ## Plugin name, human readable
    displayName:
    ## Path where the plugin must be built.
    ## Path can be 'app::Plugin' or 'plugins'
    path: app::Plugin
    ## A plugin must be generated by default.
    ## Setting this to false will make this plugin not to be built, but all items
    ## in it (models, controllers, ...) can be used as a reference.
    generate: true
    ## Do the plugin must have routes ?
    ## (will be created in <path>/Config)
    haveRoutes: false
    ## Do the plugin must have a bootstrap file ?
    ## (will be created in <path>/Config
    haveBootstrap: false
    ## Parts of the plugin ('defaults.part')
    parts: []
    ## Menus for this plugin ('defaults.menu')
    menus: []
    ## Files for this plugin ('defaults.file')
    files: []
    ## Required files/folders for this plugin ('default.required')
    required: []
    ## An array of options
    options:
      icon: puzzle-piece

  ##
  ## Default configuration for a file
  ##
  file:
    ## Template path
    ## (a list can be found in '<template>/files', and path must be relative to
    ## this folder.)
    template:
    ## Folder where the file must be copied (relative to final plugin directory)
    targetPath:
    ## Final file name
#    targetFileName:
    ## Target extension
#    ext: ctp
    ## Options for the file templates
    options: []
    ## Generate the file ?
    generate: true

  ##
  ## Default configuration for a menu (By default, same as a file.)
  ##
  menu:
    ## Template path
    ## (a list can be found in '<template>/menus', and path must
    ## be relative to this folder.)
    template:
    ## Target folder (relative to detination plugin's "View/" folder)
    targetPath: Elements::menus
    ## Final file name
    ## Target extension
    ## Options
    options:
      ## List of routing prefixes to be displayed in the menu.
      prefixes: []
      ## List of controllers that must be hidden by default
      hiddenControllers: []
      ## List of plugins that must be hidden by default.
      hiddenPlugins: []
      ## List of hidden actions in the menu
      hiddenActions:
        view
        delete
        edit
    ## Generate the menu ?
    generate: true

  ##
  ## Default configuration for a required file or folder.
  ## Required files/folders are located in '<template>/required' and are files
  ## and folder that may be needed by your app.
  ##
  required:
    ## Copy the files ?
    generate: true
    ## Target file or folder
    target:
    ## Source file or folder
    source:
    ## Type: file or folder
    type:
    ## For folders: Copy only the source content ?
    ## If set to false, the source dir will be created too.
    contentOnly: true


#--------------------------------------------------------------------------
#
# Plugins
#
#--------------------------------------------------------------------------
plugins:

  ## --------------------------------------------------------------------------
  ##  "appBase" is not a plugin!
  ##    Everything defined here will be baked in "app/".
  ##  This section must be defined, even if you keep it empty.
  ## ----------------------------
  ##  Contains: Users, Groups
  ## --------------------------------------------------------------------------
  ## This is a special "plugin": it uses the <cake>/app/ folder as a plugin. All
  ## the models, controllers,... will be created relatively to app/
  ## If, for a reason you need to create a real plugin named 'appBase', change the
  ## 'general.appBase' value of this file for something else, and put its name here too.
  ##
  ## This is the "plugin" in wich you should define your app wide
  ## menus/files/required things
  ##
  AppBase:
    options:
      icon: user
    displayName: System
    ## Plugin parts
    ## Be carefull when naming empty parts: as the part name is used for empty
    ## models definition or empty controllers definition, you should use the Cake
    ## naming convention : Users for table users, WaitingOrders for table
    ## waiting_orders,...
    ##
    ## But you can name it as you want when the models/controllers definitions
    ## have the name set.
    parts:

      ##
      ## Users management. Put here as I use the Alaxos' Acl plugin, which
      ## doesn't work if users and groups are inside a plugin
      Users:
        model:
          displayField: username
          snippets:
            acls:
              path: acls::users
        controller:
          actions:
            ## Public actions
            public:
              ## "Login" action
              login:
                template: users::login
                options:
                  layout: login
                view:
                  template: users::login

#              register:
#                template: users::register
#                view:
#                  template: users::register
              logout:
                template: users::logout
              view:
#                blackListed: true
              index:
                blackListed: true
            user:
              index:
                view:
                  options:
                    hiddenFields:
                      bio
                      see_nsfw
                      password
                      modified
                      website
                      realname
                      email
                      nbposts
                      status
              add:
                blackListed: true
              delete:
                blackListed: true
              edit:
                blackListed: true
              ## Edit own profile
              profile:
                options:
                  conditions:
                    id: %self%
              ## Dashboard
              dashboard:
                options:
                  conditions:
                    id: %self%
              ## Close the account
              close:

            admin:
              add:
                view:
                  options:
                    hiddenFields:
                      nbposts
                      bio
              index:
                view:
                  options:
                    hiddenFields:
                      bio
                      see_nsfw
                      password
                      modified
                      website
                      realname
        options:
          icon: user
          ## Options are part-wide, as needed by models/controllers and views
          ## Name of the pass field in DB and forms
          passField: password
          ## Name of the pass confirmation in forms
          passCheckField: password2

      ##
      ## Groups management
      Groups:
        controller:
          actions:
            user:
              add:
                blackListed: true
              edit:
                blackListed: true
              delete:
                blackListed: true
        options:
          icon: group
        model:
          snippets:
            acls:
              path: acls::roles
              options: []
    ##
    ## Menus for AppBase
    ##
    menus:
      ## ---
      ## Admin menu
      ## ---
      admin_menu:
        template: menu
        targetPath: Elements::menus::admin.ctp
        options:
          prefixes:
            admin
          hiddenControllerActions:
            Posts:
              add
          haveUserMenu: true
      ## ---
      ## User menu
      ## ---
      user_menu:
        template: menu
        targetPath: Elements::menus::user.ctp
        options:
          prefixes:
            user
          hiddenPlugins:
            Acl
            Misc
          haveUserMenu: true
      ## ---
      ## Public menu
      ## ---
      public_menu:
        generate: true
        template: composed
        targetPath: Elements::menus::public.ctp
        options:
          elements:
            # Articles
            Articles:
              # type: cake URL
              t: cakeUrl
              # Plugin
              p: Blog
              # Controller
              c: Posts
              # Action
              a: index
              # Title
            Files:
              p: Gallery
              c: Galleries
              a: index
              t: cakeUrl
            Likes:
              p: Likes
              c: Likes
              a: index
              t: cakeUrl
            Links:
              p: Links
              c: Links
              a: index
              t: cakeUrl
            Projects:
              p: Projects
              c: Projects
              a: index
              t: cakeUrl
            SFW:
              t: sfwSwitch
            Members:
              t: userMenu
              mustBeLoggedIn: true
#            name:
#              t: group
#              icon:
#              elements:
#                cakeUrl:
#                separator:
#                  t: title
#                url:
#            otherName:
#              t: url
#              l: link

    ##
    ## Standalone Files
    ##
    files:
      ##
      ## Custom bootstrap
      bootstrap:
        targetPath: Config::bootstrap.php
        template: bootstrap

      ##
      ## Layouts
      layout_public:
        targetPath: View::Layouts::default.ctp
        template: layouts::default
        options:
          userLine: public
          style: public
          usePluginColors: true
      layout_user:
        targetPath: View::Layouts::user.ctp
        template: layouts::default
        options:
          userLine: user
          style: public
          usePluginColors: true
      layout_admin:
        targetPath: View::Layouts::admin.ctp
        template: layouts::default
        options:
          userLine: admin
          style: admin
          usePluginColors: true
      layout_login:
        targetPath: View::Layouts::login.ctp
        template: layouts::login
      ##
      ## Footer bar
      footer:
        targetPath: View::Elements::footer.ctp
        template: elements::footer
      ##
      ## Language bar
      lang-bar:
        targetPath: View::Elements::lang-bar.ctp
        template: elements::lang-bar

      ##
      ## AppController
      AppController:
        targetPath: Controller::AppController.php
        template: appController
      ##
      ## AppHelper
      AppHelper:
        targetPath: View::Helper::AppHelper.php
        template: helpers::appHelper
      ##
      ## Flash messages
      ##
      flash_error:
        targetPath: View::Elements::flash_error.ctp
        template: elements::flash_message
        options:
          alertClass: danger
      flash_warning:
        targetPath: View::Elements::flash_warning.ctp
        template: elements::flash_message
        options:
          alertClass: warning
      flash_info:
        targetPath: View::Elements::flash_info.ctp
        template: elements::flash_message
        options:
          alertClass: info
      flash_succcess:
        targetPath: View::Elements::flash_success.ctp
        template: elements::flash_message
        options:
          alertClass: success
    ##
    ## Required files and folders
    ##
    required:
      ## Helpers (may be empty)
      Helpers:
        type: folder
        source: helpers
        target: View::Helper
        contentOnly: true

      ##
      ## CSS
      css-admin:
        type: file
        ## Source
        source: css::admin.css
        ## Target folder
        target: webroot::css::admin.css
      css-public:
        type: file
        source: css::public.css
        target: webroot::css::public.css

      ##
      ## Pages for pageController
      Pages:
        type: folder
        source: pages
        target: View::Pages

      ##
      ## Flag images
      images-Flags:
        type: folder
        source: images::flags
        target: webroot::img
        ## Copy the source folder too
        contentOnly: false

      ##
      ## CKeditor
      js-ckEditor:
        type: folder
        source: js::ckeditor
        target: webroot::js
        contentOnly: false

      ##
      ## Datetime picker
      js-datetimepicker:
        type: file
        source: js::datetime::js::bootstrap-datetimepicker.js
        target: webroot::js::bootstrap-datetimepicker.js

      ##
      ## jQuery
      js-jQuery:
        type: file
        source: js::jquery-1.10.2.min.js
        target: webroot::js::jquery-1.10.2.min.js

      ##
      ## Icons Font
      fonts-awesome:
        type: folder
        source: css::font-awesome::fonts
        target: webroot::fonts
        contentOnly: true

      ##
      ## Image lib
      lib-Image:
        type: folder
        source: libs::Image
        target: Lib::Image
        contentOnly: true

  ## --------------------------------------------------------------------------
  ##  Projects plugin
  ## ----------------------------
  ##  Manage some projects
  ## --------------------------------------------------------------------------
  ##
  Projects:
    options:
      icon: puzzle-piece
    parts:
      ## List of projects
      Projects:
        controller:
          actions:
            user:
              index:
                options:
                  conditions:
                    user_id: %self%
              edit:
                options:
                  conditions:
                    user_id: %self%
                  hiddenFields:
                    user_id
              add:
                options:
                  conditions:
                    user_id: %self%
                  hiddenFields:
                    user_id
        options:
          icon: puzzle-piece
      ## Notes, news about a project
      ProjectNotes:
        controller:
          actions:
            user:
              index:
                options:
                  conditions:
                    user_id: %self%
              edit:
                options:
                  conditions:
                    user_id: %self%
                  hiddenFields:
                    user_id
              add:
                options:
                  conditions:
                    user_id: %self%
                  hiddenFields:
                    user_id
        options:
          icon: pencil
      ## Project state (dev/stable/...)
      ProjectStates:
        options:
          icon: tasks
        controller:
          options:
            conditions: []

  ## --------------------------------------------------------------------------
  ##  Blog plugin
  ## ----------------------------
  ##  Write stuff !
  ## --------------------------------------------------------------------------
  ##
  Blog:
    options:
      icon: book
    generate: true
    parts:
      ## Posts
      Posts:
        controller:
          actions:
            public:
              view:
                options:
                  conditions:
                    Post.published: 1
                view:
                  options:

              index:
                options:
                  conditions:
                    Post.published: 1
                    Post.publication_date <=: %now%
                view:
                  template: index::article
                  options:
                    ## unsortable fields:
#                    unSortableFields:
#                      text
                    ## Title
                    titleField: title
                    ## Content
                    contentField: excerpt
                    ## Creation date
                    cDateField: created
                    ## Modification date
                    #mDateField:
                    ## Category
                    catField: post_category_id
                    ## Licensefield
                    licenseField: license_id
                    ## Author:
                    authorField: user_id
                    # Have a Safe for Work field
                    sfwField: sfw
                    # Have an Anon field
                    anonField: anon
            user:
              index:
                options:
                  conditions:
                    user_id: %self%
                view:
                  options:
                    conditions:
                      user_id: %self%
                    hiddenFields:
                      text
              add:
                options:
                  conditions:
                    user_id: %self%
                  hiddenAssociations:
                    User
            admin:
              bug:

        options:
          icon: book
      ## Post categories
      PostCategories:
        options:
          icon: list-ul
        controller:
          actions:
            public:
              view:
                view:
                  options:
                    assoc_hiddenModelFields:
                      Posts:
                        created
                        modified
                        anon
                        id
                        license_id
                        post_category_id
                        text_fra
                        text_eng
                        published
                        user_id
                        sfw


  ## --------------------------------------------------------------------------
  ##  Gallery plugin
  ## ----------------------------
  ##  More a file explorer than an actual gallery
  ## --------------------------------------------------------------------------
  ##
  Gallery:
    options:
      icon: picture-o
    parts:
      ## The galleries list
      Galleries:
        controller:
          actions:
            public:
              index:
                view:
                  template: index::gallery
                  options:
                    titleField: name
                    contentField: description
                    authorField: user_id
                    sfwField: sfw
                    anonField: anon
                    publicField: public
              view:
                view:
                  template: view::gallery
                  options:
                    titleField: name
                    contentField: description
                    authorField: user_id
                    sfwField: sfw
                    publicField: public
                    anonField: anon
                    itemsModel: gallery_items

                    itemTitle: name
                    itemDescription:
                    itemTarget: path
                    itemSfw: sfw
                    itemLicense: license_id
                    itemAuthor: user_id
            user:
              index:
                options:
                  conditions:
                    user_id: %self%
        options:
          icon: picture-o
      ## An item in the gallery
      GalleryItems:
        options:
          fileField:
            type: image
            name: file
            allowedExts:
              jpg
              png
              gif
            path: img::uploads
            imageMaxWidth: 900
        options:
          controller:
            libraries:
              Image: SimpleImage

        controller:
          actions:
            user:
              index:
                options:
                  conditions:
                    user_id: %self%
    ## ---
    ## Required files for the gallery plugin
    ## ---
    required: []

  ## --------------------------------------------------------------------------
  ##  Likes plugin
  ## ----------------------------
  ##  Stuff I liked on the internet. A kind of "a la Facebook" sharing wall
  ## --------------------------------------------------------------------------
  ##
  Likes:
    options:
      icon: heart
    parts:
      ## The list
      Likes:
        controller:
          actions:
            user:
              index:
                options:
                  conditions:
                    user_id: %self%
        options:
          icon: heart
  ## --------------------------------------------------------------------------
  ##  Links plugin
  ## ----------------------------
  ##  Links to friends, stuff
  ## --------------------------------------------------------------------------
  ##
  Links:
    options:
      icon: link
    parts:
      ## The list
      Links:
        controller:
          actions:
            user:
              index:
                options:
                  conditions:
                    user_id: %self%
        options:
          icon: link
      ## Link categories
      LinkCategories:
        options:
          icon: list-ul

  ## --------------------------------------------------------------------------
  ##  Misc plugin
  ## ----------------------------
  ##  Everything else
  ## --------------------------------------------------------------------------
  ##
  Misc:
    options:
      icon: cogs
    parts:
      ## Things reported by users
      Reports:
        options:
          icon: flag
      ## Possible reasons:
      ReportReasons:
      ## I don't remember this one
      Pages:
        options:
          icon: file-text
      ## Licenses used
      Licenses:
        model:
          displayField: name
        options:
          icon: circle-o

  ## --------------------------------------------------------------------------
  ##  Acl manager
  ## ----------------------------
  ##  Here for menu items (for now)
  ## --------------------------------------------------------------------------
  ##
  Acl:
    options:
      icon: shield
    path: plugins
    generate: false
    parts:
      Acos:
        haveModel: false
        controller:
          name: Acos
          actions:
            public:
              index:
                blackListed: true
              add:
                blackListed: true
              edit:
                blackListed: true
              delete:
                blackListed: true
              view:
                blackListed: true
            user:
              index:
                blackListed: true
              add:
                blackListed: true
              edit:
                blackListed: true
              delete:
                blackListed: true
              view:
                blackListed: true
            admin:
              index:
                blackListed: true
              add:
                blackListed: true
              edit:
                blackListed: true
              delete:
                blackListed: true
              view:
                blackListed: true
              build_acl: []
              empty_acos: []
              prune_acos: []
              synchronize: []
      Aros:
        options:
          icon: group
        haveModel: false
        controller:
          name: Acos
          actions:
            public:
              index:
                blackListed: true
              add:
                blackListed: true
              edit:
                blackListed: true
              delete:
                blackListed: true
              view:
                blackListed: true
            user:
              index:
                blackListed: true
              add:
                blackListed: true
              edit:
                blackListed: true
              delete:
                blackListed: true
              view:
                blackListed: true
            admin:
              add:
                blackListed: true
              edit:
                blackListed: true
              delete:
                blackListed: true
              view:
                blackListed: true
              check: []
              empty_permissions: []
              role_permissions: []
              update_user_role: []
              users: []
      Acl:
        haveModel: false
        controller:
          name: Acl
          actions:
            public:
              index:
                blackListed: true
              add:
                blackListed: true
              edit:
                blackListed: true
              delete:
                blackListed: true
              view:
                blackListed: true
            user:
              index:
                blackListed: true
              add:
                blackListed: true
              edit:
                blackListed: true
              delete:
                blackListed: true
              view:
                blackListed: true
            admin:
              add:
                blackListed: true
              edit:
                blackListed: true
              delete:
                blackListed: true
              view:
                blackListed: true
  DebugKit:
    generate: false
    haveBootstrap: false
    haveRoutes: false

  ## --------------------------------------------------------------------------
  ##  Sb plugin, for test
  ## ----------------------------
  ##  Here for menu items
  ## --------------------------------------------------------------------------
  ##
#  Sb:
#    options:
#      icon: star fa-spin text-danger
#    path: plugins
#    displayName: superBake
#    generate: false
#    parts:
#      main:
#        options:
#          icon: star text-danger
#        haveModel: false
#        haveController: true
#        controller:
#          name: Sb
#          displayName: Superbake
#          actions:
#            public:
#              check: []
#              tree: []
#              arraymerge: []
#              index:
#                blackListed: true
#              view:
#                blackListed: true
#            admin:
#              index:
#                blackListed: true
#              view:
#                blackListed: true
#              add:
#                blackListed: true
#              edit:
#                blackListed: true
#              delete:
#                blackListed: true